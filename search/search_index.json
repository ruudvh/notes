{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home \u00b6 Please note the following pages are a collection of notes regarding a variety of topics. Most have been written as cheatsheets for myself, or as (hopefully) helpful guides for friends. Feel free to browse around, take what you need. All content distributed under the MIT license, unless otherwise noted. Please note that this runs on git and is hosted on GitHub. Notice any errors, have suggestions, or questions? Feel free to leave a comment or - even better - edit the page directly.","title":"Home"},{"location":"#home","text":"Please note the following pages are a collection of notes regarding a variety of topics. Most have been written as cheatsheets for myself, or as (hopefully) helpful guides for friends. Feel free to browse around, take what you need. All content distributed under the MIT license, unless otherwise noted. Please note that this runs on git and is hosted on GitHub. Notice any errors, have suggestions, or questions? Feel free to leave a comment or - even better - edit the page directly.","title":"Home"},{"location":"deep-learning/","text":"Deep Learning \u00b6 Intro \u00b6 AI Is the New Electricity -- Andrew Ng There have been three great technological revolutions so far; the agricultural revolution, the industrial revolution, and the computer/internet revolution. We are now (early) in the artificial intelligence revolution. Electricity transformed countless industries; AI is doing the same right now . A slightly older video but a good introduction: Andrew Ng: Artificial Intelligence is the New Electricity . Videos \u00b6 Unfortunately this is not in video format. If you prefer to learn about Deep Learning in video format you can check out the free Deep Learning Specialization on Coursera or the free Practical Deep Learning course on Fast.AI.","title":"Deep Learning"},{"location":"deep-learning/#deep-learning","text":"","title":"Deep Learning"},{"location":"deep-learning/#intro","text":"AI Is the New Electricity -- Andrew Ng There have been three great technological revolutions so far; the agricultural revolution, the industrial revolution, and the computer/internet revolution. We are now (early) in the artificial intelligence revolution. Electricity transformed countless industries; AI is doing the same right now . A slightly older video but a good introduction: Andrew Ng: Artificial Intelligence is the New Electricity .","title":"Intro"},{"location":"deep-learning/#videos","text":"Unfortunately this is not in video format. If you prefer to learn about Deep Learning in video format you can check out the free Deep Learning Specialization on Coursera or the free Practical Deep Learning course on Fast.AI.","title":"Videos"},{"location":"notes/git/","text":"Git \u00b6 Installation \u00b6 To check whether or not you have Git installed, enter git into the command line. If you get messages saying that this command could not be found, you\u2019ll have to download and install it, see Git\u2019s download page . Links \u00b6 Git\u2019s download page","title":"Git"},{"location":"notes/git/#git","text":"","title":"Git"},{"location":"notes/git/#installation","text":"To check whether or not you have Git installed, enter git into the command line. If you get messages saying that this command could not be found, you\u2019ll have to download and install it, see Git\u2019s download page .","title":"Installation"},{"location":"notes/git/#links","text":"Git\u2019s download page","title":"Links"},{"location":"notes/python/","text":"Python \u00b6 Intro \u00b6 Python is a programming language that lets you work quickly and integrate systems more effectively. -- Python.org Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation. Python is dynamically-typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly procedural), object-oriented and functional programming. It is often described as a \"batteries included\" language due to its comprehensive standard library. Links \u00b6 The official Python.org site has great resources available for beginners . Wikipedia provides a good high level overview about the language and its history.","title":"Python"},{"location":"notes/python/#python","text":"","title":"Python"},{"location":"notes/python/#intro","text":"Python is a programming language that lets you work quickly and integrate systems more effectively. -- Python.org Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation. Python is dynamically-typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly procedural), object-oriented and functional programming. It is often described as a \"batteries included\" language due to its comprehensive standard library.","title":"Intro"},{"location":"notes/python/#links","text":"The official Python.org site has great resources available for beginners . Wikipedia provides a good high level overview about the language and its history.","title":"Links"},{"location":"notes/python/django/","text":"Django Installation \u00b6 Django makes it easier to build better web apps more quickly and with less code. -- djangoproject.com The official Django website provides great resources for begginers to get up and running. But the package installer and virtual environment might confuse you. Install Python https://www.python.org/downloads/ Install database (PostgreSQL) https://www.postgresql.org/ Install pip pip is the package installer for Python. You can use pip to install packages from the Python Package Index (PyPI) and other indexes. pip is automatically installed with Python downloaded from Python.org . Install venv The venv module provides support for creating lightweight \u201cvirtual environments\u201d with their own site directories. Each virtual environment has its own Python binary and can have its own independent set of installed Python packages in its site directories. Also known as virtualenv in Python 2. venv is automatically installed with Python downloaded from Python.org . Create virtual environment The following command will create a new virtual environment in the current directory. This virtual environment and all its related files and data will be stored in the .venv folder. You can create and name the venv whatever you like but .venv is fairly standard. python -m venv .venv What is the difference between venv, pyvenv, pyenv, virtualenv, virtualenvwrapper, pipenv, etc? There are many different package and virtual environment managers available. Each created to solve a unique issue or to solve it better/faster/more efficient than the other. For now you can safely ignore all of them and just use the standard shipped pip and venv . Tip Use a separate virtual environment for each project. Activate virtual environment To start using your newly created virtual environment you just have to run activate . .venv\\Scripts\\activate If you have multiple environments you can run a specific environment by navigating to its activate file. C:\\dev\\python\\fungame\\.venv\\Scripts\\activate Once activate your command shell will be updated and include the name of your venv in parenthesis. C:\\dev\\python\\fungame> .venv\\Scripts\\Activate (.venv) PS C:\\dev\\python\\fungame> Install Django Once your virtual environment is activated you can use the command shell like you usually would. In this case we will install Django. python -m pip install Django Git clone repository At this point it is recommended to initiate and create your first git commit . This way you have a nice clean starting point incase anything goes wrong. For more info about git see the git notes . Install requirements python -m pip install -r requirements.txt Deactivate virtual environment when done deactivate Links \u00b6 Official Django website venv offical docs pypi.org Package Index Python.org","title":"Django Installation"},{"location":"notes/python/django/#django-installation","text":"Django makes it easier to build better web apps more quickly and with less code. -- djangoproject.com The official Django website provides great resources for begginers to get up and running. But the package installer and virtual environment might confuse you. Install Python https://www.python.org/downloads/ Install database (PostgreSQL) https://www.postgresql.org/ Install pip pip is the package installer for Python. You can use pip to install packages from the Python Package Index (PyPI) and other indexes. pip is automatically installed with Python downloaded from Python.org . Install venv The venv module provides support for creating lightweight \u201cvirtual environments\u201d with their own site directories. Each virtual environment has its own Python binary and can have its own independent set of installed Python packages in its site directories. Also known as virtualenv in Python 2. venv is automatically installed with Python downloaded from Python.org . Create virtual environment The following command will create a new virtual environment in the current directory. This virtual environment and all its related files and data will be stored in the .venv folder. You can create and name the venv whatever you like but .venv is fairly standard. python -m venv .venv What is the difference between venv, pyvenv, pyenv, virtualenv, virtualenvwrapper, pipenv, etc? There are many different package and virtual environment managers available. Each created to solve a unique issue or to solve it better/faster/more efficient than the other. For now you can safely ignore all of them and just use the standard shipped pip and venv . Tip Use a separate virtual environment for each project. Activate virtual environment To start using your newly created virtual environment you just have to run activate . .venv\\Scripts\\activate If you have multiple environments you can run a specific environment by navigating to its activate file. C:\\dev\\python\\fungame\\.venv\\Scripts\\activate Once activate your command shell will be updated and include the name of your venv in parenthesis. C:\\dev\\python\\fungame> .venv\\Scripts\\Activate (.venv) PS C:\\dev\\python\\fungame> Install Django Once your virtual environment is activated you can use the command shell like you usually would. In this case we will install Django. python -m pip install Django Git clone repository At this point it is recommended to initiate and create your first git commit . This way you have a nice clean starting point incase anything goes wrong. For more info about git see the git notes . Install requirements python -m pip install -r requirements.txt Deactivate virtual environment when done deactivate","title":"Django Installation"},{"location":"notes/python/django/#links","text":"Official Django website venv offical docs pypi.org Package Index Python.org","title":"Links"}]}